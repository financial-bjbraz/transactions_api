app.name=TransactionsAPI
appName=TransactionsAPI
app.description=@project.artifactId@ is a Spring Boot application KOTLIN + WEBFLUX
config.useJms=true

################################
# APPLICATION GENERICS
################################
logging.level.org.springframework.web=${LOGGING_LEVEL:INFO}
logging.level.org.hibernate=${LOGGING_LEVEL:INFO}
server.port=8081
server.webflux.base-path=/
springdoc.api-docs.path= /v3/api-docs
springdoc.api-docs.packagesToScan= br.com.bjbraz
springdoc.api-docs.swagger-ui.path= /swagger-ui.html

ppi.base.url=${PPI_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface}
ppi.account.url=${PPI_ACCOUNT_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/child}
ppi.cardBalance.url=${PPI_CARD_BALANCE_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards/{externalCode}/balance}
ppi.accountBalance.url=${PPI_ACCOUNT_BALANCE_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/{financialOperationKey}/balance}
ppi.chargeCard.url=${PPI_CHARGE_CARD_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards/{externalCode}/transfers}
ppi.card.url=${PPI_CARD_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards}
ppi.card_reissue.url=${PPI_CARD_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards/reissue}
#ppi.oauth.base.url=${PPI_OAUTH_URL:https://Uber:MgfQUIfDdNe4@qacst-ppi.hubprepaid.com.br/partner-interface-oauth2/oauth/token}
ppi.oauth.base.url=${PPI_OAUTH_URL:https://88insurtech:88insurtech@qacst-ppi.hubprepaid.com.br/partner-interface-oauth2/oauth/token}
ppi.cardBlock.url=${PPI_CARD_BLOCK:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards/{externalCode}/block}
ppi.cardUnBlock.url=${PPI_CARD_UNBLOCK:https://qacst-ppi.hubprepaid.com.br/partner-interface/cards/{externalCode}/unblock}
ppi.accountCharge.url=${PPI_ACCOUNT_CHARGE:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/{financialOperationKey}/transfer}
ppi.accountBlock.url=${PPI_ACCOUNT_BLOCK:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/{financialOperationKey}/blockbyuserrequest}
ppi.accountUnBlock.url=${PPI_ACCOUNT_UNBLOCK:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/{financialOperationKey}/unblockbyuserrequest}
ppi.statements.url=${PPI_ACCOUNT_STATEMENTS:https://qacst-ppi.hubprepaid.com.br/partner-interface/accounts/{financialOperationKey}/statement}
ppi.boleto.url=${PPI_BOLETO_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cashout/{financialOperationKey}/boleto}
ppi.ted.url=${PPI_TED_URL:https://qacst-ppi.hubprepaid.com.br/partner-interface/cashout/{financialOperationKey}/docted}

#onpremise.api.base.url=${CARD_INFO_CONSUMER_URL:http://172.22.121.153:4013} TODO


#onpremise.api.base.url=${CARD_INFO_CONSUMER_URL:http://172.22.121.153:4013} TODO

###############################################################
##################### DYNAMO #################################
spring.data.mongodb.uri=mongodb://${MONGODB_URI:192.168.0.18:49153/bank-transactions}

amazon.aws.region=${AWS_REGION:us-east-1}
amazon.aws.accessKeyId=${AWS_ACCESS_KEY_ID:AKIA6J7LZ3EDGCWCFMWN}
amazon.aws.accessKey=${AWS_ACCESS_KEY_ID:AKIA6J7LZ3EDGCWCFMWN}
amazon.aws.secretKey=${AWS_SECRET_ACCESS_KEY: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}

spring.cache.cache-names=financache
spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=3600s

###############################################################
##################### QUEUES #################################

#spring.activemq.user=guest
#spring.activemq.password=guest
#spring.activemq.broker-url=tcp://172.17.0.5:5671?jms.redeliveryPolicy.maximumRedeliveries=1

sqs.queue.account=${QUEUE_CREATE_ACCOUNT:accounts-created}
sqs.queue.card=${QUEUE_CREATE_ACCOUNT:cards-created}
sqs.queue.card.callback=${QUEUE_CARD_CALLBACK:callback-card-external}
sqs.queue.card.reissue=${QUEUE_REISSUE_CARD:cards-reissue}
sqs.queue.card.reissue.callback=${QUEUE_REISSUE_CARD:cards-reissue-callback}
sqs.queue.charge=${QUEUE_CHARGE:charge-account}
sqs.queue.command-queue=${QUEUE_COMMAND:command-queue}
sqs.queue.transfer.request=${QUEUE_ACCOUNT_TRANSFER:accounts-transfer}
sqs.queue.boleto.request=${QUEUE_BOLETO:boletos_pay}
sqs.queue.docted_request=${QUEUE_DOCTED:docted_request}
sqs.queue.docted_send=${QUEUE_DOCTED:docted_send}


##################### QUEUES #################################
###############################################################

################################
#MAIL
################################
spring.mail.host=email-smtp.sa-east-1.amazonaws.com
spring.mail.port=587
spring.mail.username=AKIA6J7LZ3EDNLYH27QT
spring.mail.password=BBNrs7wk0jzAGEGTPqI7oC9/Jnqbig9GB0F4Wi2sbLXI

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

################################
#CACHE
################################
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.pool.max-active=40

################################
#SECURITY
################################
springbootwebfluxjjwt.password.encoder.secret=mysecret
springbootwebfluxjjwt.password.encoder.iteration=33
springbootwebfluxjjwt.password.encoder.keylength=256
springbootwebfluxjjwt.jjwt.secret=ThisIsSecretForJWTHS512SignatureAlgorithmThatMUSTHave64ByteLength
springbootwebfluxjjwt.jjwt.expiration=28800

#export AWS_REGION=us-east-1
#export AWS_ACCESS_KEY_ID=AKIA6J7LZ3EDGCWCFMWN
#export AWS_SECRET_ACCESS_KEY=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
#mvn spring-boot:run -Dspring-boot.run.profiles=local -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
#docker build --network=host --build-arg aws_region=us-east-1 --build-arg aws_access_key_id=AKIA6J7LZ3EDGCWCFMWN --build-arg aws_secret_access_key=ZZHzrV/SWVafw20SckIK3IRrMgTVp2THPGwUqRCLe -t alexjavabraz/bjbraz:redis .
#docker push alexjavabraz/bjbraz:redis

